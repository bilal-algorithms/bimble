name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.increment_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Git and Get Latest Tag
        run: |
          git fetch --prune --unshallow
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      - name: Increment Version
        id: increment_version
        run: |
          latest_tag=${{ env.latest_tag }}
          echo "Latest tag: $latest_tag"
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          new_version="v$major.$minor.$((patch + 1))"
          echo "::set-output name=new_version::$new_version"
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Build for Linux
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Package for Release (Linux)
        run: zip -r bimble_linux.zip target/x86_64-unknown-linux-gnu/release/bimble
      - name: Upload Artifact (Linux)
        uses: actions/upload-artifact@v3
        with:
          name: bimble_linux
          path: bimble_linux.zip

  build-windows:
    runs-on: windows-latest
    needs: build-linux
    outputs:
      new_version: ${{ needs.build-linux.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Git and Get Latest Tag
        run: |
          git fetch --prune --unshallow
          $latestTag = git describe --tags (git rev-list --tags --max-count=1)
          echo "latest_tag=$latestTag" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Increment Version
        id: increment_version
        run: |
          $latestTag = "${{ env.latest_tag }}"
          Write-Host "Latest tag: $latestTag"
          $version = $latestTag.TrimStart('v')
          $major, $minor, $patch = $version -split '\.'
          $newVersion = "v$major.$minor.$($patch + 1)"
          echo "::set-output name=new_version::$newVersion"
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-msvc
      - name: Verify Build Output
        run: |
          if (!(Test-Path -Path target\x86_64-pc-windows-msvc\release\bimble.exe)) {
            Write-Error "Build output not found: target\x86_64-pc-windows-msvc\release\bimble.exe"
            exit 1
          }
      - name: Download vc_redist.x64.exe
        run: Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vc_redist.x64.exe -OutFile vc_redist.x64.exe
      - name: Package for Release (Windows)
        run: powershell Compress-Archive -Path target\x86_64-pc-windows-msvc\release\bimble.exe,vc_redist.x64.exe -DestinationPath bimble_windows.zip
      - name: Upload Artifact (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: bimble_windows
          path: bimble_windows.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Download Artifacts (Linux)
        uses: actions/download-artifact@v3
        with:
          name: bimble_linux
          path: ./downloads
      - name: Download Artifacts (Windows)
        uses: actions/download-artifact@v3
        with:
          name: bimble_windows
          path: ./downloads
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build-linux.outputs.new_version }}
          release_name: Release ${{ needs.build-linux.outputs.new_version }}
          body: |
            Release notes for ${{ needs.build-linux.outputs.new_version }}
            Added windows, removed mac, source code, targets folders and integrations. Kept bimble the command, changed fork and recreated from ground up, updated repo, removed readme file, and added vc_redist 64Bit in bimble_windows.zip file.
          draft: false
          prerelease: false
      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./downloads/bimble_linux.zip
          asset_name: bimble_linux.zip
          asset_content_type: application/zip
      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./downloads/bimble_windows.zip
          asset_name: bimble_windows.zip
          asset_content_type: application/zip
